https://dev.to/aws-builders/create-a-cicd-pipeline-using-github-codebuild-codedeploy-and-codepipeline-5emi

Etapa 1: criar papéis do IAM necessários
Crie uma função para a instância do EC2 com permissões para acesso ao CodeDeploy e S3 para baixar o código.
Crie uma função para o serviço CodeDeploy com permissões para acessar o S3 e as funcionalidades básicas do CodeBuild.

==========================================================================================================
Etapa 2: criar bucket do S3 para armazenar o código-fonte e criar artefatos

==========================================================================================================
Etapa 3: criar projeto de compilação de código
Aqui, criaremos um projeto de compilação que pegará o código-fonte do repositório do GitHub e autenticará o AWS CodeBuild para usar o código de nossa conta do GitHub.

==========================================================================================================
Etapa 4: criar aplicativo de implantação
Criaremos um aplicativo CodeDeploy que implantará os aplicativos na instância do EC2.

==========================================================================================================
Etapa 5: iniciar uma instância do EC2 para hospedar o aplicativo
Inicie uma instância do EC2 que terá a função personalizada anexada a ela criada na Etapa 1 e com a tag apropriada para que possa ser usada posteriormente.
Anexe o grupo de segurança com a porta 22 aberta para ssh e a porta 80 aberta para acessar o aplicativo da web.
SSH para instância do EC2 e instale o agente do CodeDeploy para que o CodeDeploy possa implantar o aplicativo.
Comandos para instalar o agente do CodeDeploy

/////////

# Installing CodeDeploy Agent

sudo yum update
sudo yum install ruby

# Download the agent (replace the region)

wget https://aws-codedeploy-eu-west-3.s3.eu-west-3.amazonaws.com/latest/install
chmod +x ./install
sudo ./install auto
sudo service codedeploy-agent status

//////


Etapa 6: criar grupo de implantação
No aplicativo CodeDeploy criado anteriormente na Etapa 4, crie Grupo de implantação e mencione a tag da instância do EC2 criada anteriormente para implantar o aplicativo em instâncias com essa tag específica.

==========================================================================================================
Etapa 7: criar um CodePipeline
Na Etapa 1, selecionaremos o GitHub como repositório de código de curso e escolheremos os artefatos a serem armazenados no bucket do S3 criado anteriormente.
Na etapa Build escolheremos o Build Project criado por nós.
No estágio Implementar, selecione o aplicativo de implementação e o grupo criado nas etapas anteriores.

==========================================================================================================
Etapa 8: atualizar a função do IAM para CodePipeline
Aqui, atualizaremos a função do IAM criada pelo CodePipeline e anexaremos a política de acesso que concede acesso total do S3 ao CodePipeline.
Isso é tudo que o pipeline é criado e podemos fazer alterações no repositório do github e verificar o funcionamento do pipeline.

